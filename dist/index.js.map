{"version":3,"file":"index.js","sources":["webpack:///webpack/bootstrap","webpack:///./index.js","webpack:///./libs/csv2json.js","webpack:///./libs/jsono.js","webpack:///./libs/stock/fetch/fetch.js","webpack:///./libs/stock/fetch/index.js","webpack:///./libs/stock/fetch/ths_c.js","webpack:///./libs/stock/fetch/ths_new.js","webpack:///./libs/stock/fetch/ths_p.js","webpack:///./libs/stock/fetch/ycj.js","webpack:///./libs/tdx.js","webpack:///external \"cheerio-httpcli\"","webpack:///external \"fs\"","webpack:///external \"iconv-lite\"","webpack:///external \"path\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./index.js\");\n","/**\n * Created by Julien on 2019/2/27.\n */\n\nimport csv from './libs/csv2json'\nimport fetch from './libs/stock/fetch/index'\nimport tdx from './libs/tdx'\n\nexport default {\n    csv,\n    fetch,\n    tdx\n}\n","/**\n * Created by j on 18/3/10.\n */\n\nimport fs from 'fs'\nimport iconv from 'iconv-lite'\n\n/*\n * @todo 解析csv格式文本文件到json文件\n * @param csvFile {String}  csv文件名 必须\n * @param jsonFile  {String} json文件名\n * @param cols  {Array}  要截取的列索引，默认所有列\n * @param isCsdStocksJson  {Boolean}  要创建的文件是否是stocks.json\n * @returns {Promise<any>}\n */\nexport default function (csvFile, jsonFile, cols, isCsdStocksJson) {\n\n    jsonFile = jsonFile || csvFile.split('.').shift() + '.json';\n    cols = cols || [];\n\n    //console.log([].slice.call(arguments))\n\n    // 文字类型数字转为数字类型数字\n    cols = cols.map(v => {\n        return v * 1\n    })\n\n    // 不同的分割正则\n    let split_reg = /\\s{3,}/;  // (1:注意股票名称里包含多余的空格:'新 和 成')\n    if(isCsdStocksJson){  // 主要处理股票列表csv: s.txt, 以退格键进行分割\n        split_reg = /[\\t]+/;\n    }\n\n    return new Promise(function (resolve, reject) {\n        fs.readFile(csvFile, function (err, data) {\n            if (err) return reject(err)\n\n            data = iconv.decode(data, 'GBK')\n\n            let rows = data.split('\\r\\n');\n\n            console.log(`${csvFile}行数是=> `,rows.length);\n\n            // 截取对应的列，默认全列\n            let col_length = 1;\n            let rows2 = [];\n            rows.forEach(function (str) {\n                let arr = str.split(split_reg);\n                col_length = arr.length >= col_length ? arr.length : col_length;\n                //console.log(arr.length, arr.join(' '))\n                rows2.push(arr);\n            });\n\n            let rows3 = [];\n            rows2.forEach(arr => {\n                // 如果某一行的列长度小于其它列长度, 判断为冗余行, 则不加入最终json数据\n                if(col_length - arr.length > 0 ) {\n                    return //console.log('冗余行 => ',col_length, arr.length, arr.join()); // 处理冗余行 (1:注意股票名称里包含多余的空格:'新 和 成')\n                }\n                if (cols.length === 0) {\n                    rows3.push(arr);\n                } else {\n                    rows3.push(arr.filter(function (v, i) {\n                        return cols.indexOf(i) >= 0;\n                    }));\n                }\n            });\n\n            // 删除列标题\n            let th =  rows3.shift();\n            console.log('列标题是=> ', th);\n\n            console.log('有效rows length => ', rows3.length);\n\n            // 删除股票名称中的空白符\n            if(isCsdStocksJson){\n                rows3.forEach(arr => {\n                    //console.log(arr.join(' '))\n                    arr[1] = arr[1] ? arr[1].replace(/\\s+/img, '') : arr[1];\n                });\n            }\n\n            let jsonStr = JSON.stringify(rows3, null, '\\t');\n            // 如果写入js文件而不是json文件\n            if (/\\.js$/.test(jsonFile)) {\n                jsonStr = `STOCKS = ${jsonStr} ;`;\n            }\n\n            // 解析后的数据写入新文件\n            fs.writeFileSync(jsonFile, jsonStr);\n            console.log(`数据成功写入${jsonFile}.`);\n\n            // return json object\n            resolve(rows3)\n\n        });\n    })\n\n}\n\n","/*!\n * Created by j on 18/11/9.\n * 把json文件包装成对象进行增删改查\n */\n\nimport fs from 'fs'\nimport path from 'path'\n\nclass Jo {\n\n    /**\n     *\n     * @param jsonPath {String} json file path\n     */\n    constructor (jsonPath) {\n\n        jsonPath = path.resolve(__dirname, `${ jsonPath }`)\n        this.jsonPath = jsonPath\n\n        if (!fs.existsSync(jsonPath)) {\n            //fs.createWriteStream(jsonPath)\n            fs.writeFileSync(jsonPath, '{}')\n            this.json = {}\n        } else {\n            try {\n                let str = fs.readFileSync(this.jsonPath, 'utf8')\n                this.json = JSON.parse(str)\n            } catch (e) {\n                throw new Error(e)\n            }\n        }\n    }\n\n    merge (obj) {\n        Object.assign(this.json, obj)\n    }\n\n    save () {\n        fs.writeFileSync(this.jsonPath, JSON.stringify(this.json, null, '\\t'))\n    }\n\n    get (key) {\n        if (!key) return this.json\n\n        let keys = key.split('.')\n\n        return (function fx (namespace, keys) {\n            let k = keys.shift()\n            let o = namespace[k]\n            if (o && keys.length) return fx(namespace[k], keys)\n            return o\n        })(this.json, keys)\n    }\n\n    match (key) {\n        return this.get(key)\n    }\n\n}\n\n\nexport { Jo }\n\n\nexport default function (jsonFile) {\n    return new Jo(jsonFile)\n}","/**\n * Created by j on 18/8/16.\n * 从网页上获取股票信息\n */\n\nimport client from 'cheerio-httpcli'\n\nimport ths_c from './ths_c.js'\nimport ths_new from './ths_new.js'\nimport ths_p from './ths_p.js'\nimport ycj from './ycj.js'\n\nconst map = {\n    ths_c,\n    ths_new,\n    ths_p,\n    ycj\n}\n\nclient.set('gzip', true)\nclient.set('timeout', 7000)\nclient.set('headers', {\n    'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.98 Safari/537.34'\n})\n\n/**\n *\n * @param code\n * @param sourceId\n * @param delay\n * @returns {Promise<any>}\n */\nfunction fetch(code, sourceId, delay){\n\n    let source = map[sourceId]\n\n    return new Promise( (resolve, reject) => {\n\n        setTimeout( function(){\n\n            client.fetch(source.url(code), function (err, $, res, body) {\n\n                let result = source.parse($)\n\n                resolve({result, source_id: sourceId, code})\n\n            })\n\n        }, delay || 30)\n\n    })\n\n}\n\n\n//fetch.SOURCES = ['ths_new', 'ths_p', 'ths_c', 'ycj']\n\nexport default fetch","/**\n * Created by j on 18/8/18.\n */\n\nimport path from 'path'\n\nimport fetch from './fetch'\nimport jo from '../../jsono'\n\nconst SOURCES = ['ths_new', 'ths_p', 'ths_c']  // 暂时移除 'ycj'\n\nlet timer\nlet stat = {}\n\n/**\n * @param stocks {Array}\n * @param index {Number}\n * @param sources {Array}\n * @param csdPath {String}\n * @param watcher {Function}\n */\nfunction start (stocks, index, sources, csdPath, watcher) {\n\n    let arr = stocks[index]\n    if (!arr) {\n        stat = {over: true, index: index}\n        watcher(stat)\n        return console.log(`fetch over, size is ${index}`)\n    }\n\n    let [code, name] = arr\n    let progress = (index+1) / stocks.length * 100\n    progress = progress.toFixed(2)\n    progress = `${ progress }%`\n    stat = {name, code, index, progress}\n    watcher(stat)\n\n    console.log('fetch => ', code, name, index)\n\n    let promises = sources.map((id, index) => {\n        return fetch(code, id, index * (Math.random() + 0.1) * 3000)\n    })\n\n    Promise.all(promises)\n        .then(data => {\n\n            // console.log(typeof data,  data[0])\n\n            let sjo = jo(path.resolve(csdPath, `./s/${ code }.json`))\n\n            sjo.merge({\"名称\": name, \"code\": code})\n\n            for (let v of data) {\n                sjo.merge(v.result)\n            }\n\n            sjo.save()\n\n            timer = setTimeout(function () {\n\n                start(stocks, index + 1, sources, csdPath, watcher)\n\n            }, (Math.random() + 0.1) * 3000)\n\n        })\n        .catch(err => {\n            throw new Error(err)\n        })\n\n}\n\n/**\n *\n * @param csdPath {String}\n * @param stocks {Array|String} [['300059', '东方财富']]  数组或json文件路径\n * @param index {Number}\n * @param sources {Array}  ['ths_new', 'ths_p', 'ths_c']\n * @param watcher {Function}\n */\nfunction f (csdPath, stocks, index, sources, watcher = stats => console.log(stats)) {\n\n    if (!csdPath) throw new Error('必须提供csd数据存储路径.')\n\n    return new Promise((resolve, reject) => {\n\n        if (!stocks) {\n            stocks = jo(path.resolve(csdPath, './stocks.json')).json\n        }\n\n        if (typeof stocks === 'string') {\n            stocks = jo(path.resolve(csdPath, stocks)).json\n        }\n\n        index = index * 1\n        sources = sources || SOURCES\n\n        console.log(`stocks.length is ${ stocks.length }`)\n\n        start(stocks, index, sources, csdPath, (stats) => {\n            watcher(stats)\n            if (stats.over) {\n                resolve(stats)\n            }\n        })\n\n    })\n\n}\n\nf.stop = function () {\n    console.log('clear fetch timer =>', timer)\n    clearTimeout(timer)\n    return stat\n}\n\nf.SOURCES = SOURCES\n\nexport default f","/*!\n * Created by j on 18/11/25.\n * 同花顺概念页面资料解析: http://basic.10jqka.com.cn/000001/concept.html\n */\nString.prototype.j_trim = function(){\n    return this.replace(/\\s+/img, '');\n};\n\nmodule.exports = {\n    url: function(code){\n        return `http://basic.10jqka.com.cn/${code}/concept.html`;\n    },\n    parse: function($){\n        var $table = $('#concept table.gnContent');\n        var $gnName = $table.find('tr td.gnName');\n        var $extend_content = $table.find('tr.extend_content');\n        var concept = {};\n        $gnName.each(function(i){\n            let name = $(this).text().j_trim();\n            concept[name] = $extend_content.eq(i).text().j_trim();\n        });\n        return {\n            '概念详情':concept\n        };\n    }\n};","/**\n * Created by j on 18/8/13.\n * 同花顺动态页面解析 http://basic.10jqka.com.cn/000001/\n */\n\nString.prototype.j_trim = function(){\n    return this.replace(/\\s+/img, '');\n};\n\nmodule.exports = {\n    url: function(code){\n        return `http://basic.10jqka.com.cn/${code}/`;\n    },\n    parse: function($){\n        var $table = $('#profile table');\n        var $td = $table.eq(0).find('td');\n        var concept = $td.eq(2).text().replace('概念强弱排名：', '').replace('涉及概念：', '').replace('详情>>','').j_trim();\n        var finance = $td.eq(3).text().replace('财务分析：', '').j_trim();\n        var type = $table.eq(1).find('td').eq(3).text().replace('分类：', '').j_trim();\n        return {\n            '概念':concept,\n            '财务':finance,\n            '分类':type\n        };\n    }\n};","/**\n * Created by j on 18/8/16.\n * 同花顺公司资料页面解析 http://basic.10jqka.com.cn/000001/company.html\n */\n\nString.prototype.j_trim = function(){\n    return this.replace(/\\s+/img, '');\n};\n\nmodule.exports = {\n    url: function(code){\n        return `http://basic.10jqka.com.cn/${code}/company.html`;\n    },\n    parse: function($) {\n        var $td = $('#detail td');\n        var full_name = $td.eq(1).text().replace('公司名称：', '').j_trim();\n        var position = $td.eq(2).text().replace('所属地域：', '').j_trim();\n        var business = $td.eq(4).text().replace('所属行业：', '').j_trim();\n        var industry = $td.eq(7).text().replace('主营业务：', '').j_trim();\n        var product = $td.eq(8).text().replace('产品名称：', '').j_trim();\n        return {\n            '全名': full_name,\n            '地域': position,\n            '行业': business,\n            '业务': industry,\n            '产品': product\n        };\n    }\n};\n","/**\n * Created by j on 18/8/16.\n * 云财经股票页面数据解析\n */\n\nmodule.exports = {\n    url: function(code){\n        code = ( /^6/.test(code) ? 'sh' : 'sz' ) + code;\n        return `http://www.yuncaijing.com/quote/${code}.html`;\n    },\n    parse: function($) {\n        var arr = $('.ralate table tr').map(function(){\n            var s = $(this).find('td a').text() || '';\n            var s2 = $(this).find('td small').text() || '';\n            return s.trim() + '-' + s2.trim();\n        }).get().join('  ');\n        return {\n            //'news': $('.tab-panel.active').html(),\n            '概念y': arr\n        }\n    }\n};","/**\n * Created by j on 18/8/13.\n * 创建通达信自定义数据更新\n */\n\nimport fs from 'fs'\nimport path from 'path'\nimport iconv from 'iconv-lite'\n\nimport jo from './jsono'\n\n/**\n *\n * @param prop {String}\n * @param index {Number}\n * @param csdPath {String} csd文件夹路径\n * @param tempFile {String} 临时使用的通达信自定义数据文件\n * @param stocks {Array} stocks list\n */\nfunction createPropFile (prop, index, csdPath, tempFile, stocks) {\n\n    let propFile = path.resolve(csdPath, `./${ prop }.txt`)\n\n    let result = ''\n\n    stocks.forEach(function (arr, i) {\n        let code = arr[0]\n        let szh = /^6/.test(code) ? 1 : 0\n        let sjo = jo(path.resolve(csdPath, `./s/${ code }.json`))\n        let text = ''\n        console.log(arr[0], arr[1])\n        switch (prop) {\n            case '概念':\n                text = sjo.get('概念').replace(/[，]/img, '  ') + '  ' + sjo.get('行业').replace(/^.+[—]/, '-') + '  ' + (sjo.get('概念z')||'') + '  '\n                break;\n            case '概念y':\n                text = (sjo.get('概念y') || '').replace(/[-]\\d+[%]/img, '  ')\n                break;\n            case '产品':\n                text = sjo.get('产品').replace(/[、]/img, '  ')\n                break;\n            case '业务':\n                text = sjo.get('业务') + '  '\n                break;\n            default:\n                text = sjo.get(prop) + '  '\n        }\n        result += [szh, code, index, text, '0.000'].join('|') + '\\r\\n'\n    })\n\n    fs.writeFileSync(propFile, result)\n    fs.writeFileSync(tempFile, result, {encoding: 'utf8', flag: 'a'})\n}\n\n/**\n *\n * @param csdPath {String}\n * @param tdxFile {String} default: /Volumes/C/new_jyplug/T0002/signals/extern_user.txt\n * @param props {String|Array}\n */\nexport default function (csdPath, tdxFile, props = ['概念', '概念y', '产品', '业务', '全名', '备注']) {\n\n    let absolutePathReg = /^\\//\n    if (!absolutePathReg.test(csdPath) || !absolutePathReg.test(tdxFile)) throw new Error('必须提供csd数据存储路径和通达信自定义数据文件路径.')\n\n    return new Promise((resolve, reject) => {\n\n        let stocks = jo(path.resolve(csdPath, './stocks.json')).json\n\n        let tempFile = path.resolve(csdPath, tdxFile.split(/[/\\\\]/).pop())\n\n        fs.writeFileSync(tempFile, '')\n\n        if (typeof props === 'string') {\n            props = [props]\n        }\n\n        props.forEach((prop, index) => {\n            createPropFile(prop, index + 1, csdPath, tempFile, stocks)\n        })\n\n        // 一次性更新所有自定义数据 或者 更新特定字段自定义数据\n        if (props.length === 1) return resolve(path.resolve(csdPath, `${ props[0] }.txt`))\n\n        fs.createReadStream(tempFile)\n            .pipe(iconv.decodeStream('utf8'))\n            .pipe(iconv.encodeStream('GBK'))\n            .pipe(fs.createWriteStream(tdxFile))\n\n        console.log(`****数据写入${tdxFile};通达信自定义数据更新完成****`)\n        \n        resolve(tempFile)\n\n    })\n\n}","module.exports = require(\"cheerio-httpcli\");","module.exports = require(\"fs\");","module.exports = require(\"iconv-lite\");","module.exports = require(\"path\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AClFA;AAAA;AAAA;AAAA;AAAA;;;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AAHA;;;;;;;;;;;;ACRA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAIA;AACA;AAEA;;;;;;;;;AAQA;AAEA;AACA;AAIA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;AClGA;;;;AAKA;AACA;AACA;AACA;;;AAEA;;;;AAIA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;;;;AAKA;AAGA;AACA;AACA;;;;;;;;;;;;AClEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AAKA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AADA;AAIA;;;;;;;;AAOA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;ACzDA;;;AAIA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;;;;;;;;AAOA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AARA;AAAA;AAAA;AACA;AASA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAGA;AAEA;AAEA;AAAA;AAAA;AAAA;AANA;AAAA;AAAA;AACA;AADA;AAQA;AAAA;AACA;AACA;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAWA;AAEA;AAEA;AAEA;AAEA;AAEA;AACA;AAEA;AAEA;;;;;;;;;;AAQA;AAAA;AAAA;AAAA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;ACrHA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AAhBA;;;;;;;;;;;ACRA;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AAfA;;;;;;;;;;;ACTA;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AAlBA;;;;;;;;;;;ACTA;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AAfA;;;;;;;;;;;;ACLA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AAKA;AACA;AACA;AAEA;AAEA;;;;;;;;;AAQA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAdA;AACA;AAeA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;;;;;;;;AAMA;AAAA;AAEA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAKA;AAEA;AAEA;AAEA;;;;;;;;;;;AC/FA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}